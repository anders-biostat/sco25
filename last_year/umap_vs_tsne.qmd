---
title: Comparing UMAP and t-SNE
---

Here, we compare the two dimension reduction methods, t-SNE and UMAP, applied
to our usual "IFAGRKO" example data.

---

Load the data

```{r}
suppressPackageStartupMessages({
  library( tidyverse )
  library( Seurat ) })

ReadMtx( "~/Downloads/ifnagrko/ifnagrko_raw_counts.mtx.gz",
         "~/Downloads/ifnagrko/ifnagrko_obs.csv",
         "~/Downloads/ifnagrko/ifnagrko_var.csv",
         cell.sep=",", feature.sep=",", skip.cell=1, skip.feature=1, 
         mtx.transpose=TRUE) -> count_matrix
```


RUn the standard Seurat pipeline. Note the we added one step, namely `RunTSNE`
in addition to `RunUMAP`:

```{r}
count_matrix %>%
  CreateSeuratObject() %>%
  NormalizeData() %>%
  FindVariableFeatures() %>%
  ScaleData() %>%
  RunPCA( npcs=20 ) %>%
  FindNeighbors( dims=1:20 ) %>%
  FindClusters( resolution=0.5 ) %>%
  RunTSNE( dims=1:20 ) %>%
  RunUMAP( dims=1:20 ) -> seu
```

Here is the UMAP plot, that we've seen before:

```{r}
UMAPPlot( seu, label=TRUE ) + coord_equal()
```

Here is the t-SNE reduction for the same data

```{r}
TSNEPlot( seu, label=TRUE ) + coord_equal()
```

To compare the two interactively with Sleepwalk, run
the following command in an interactive R session:

```r
sleepwalk::sleepwalk(
  list( Embeddings(seu,"tsne"), Embeddings(seu,"umap") ),
  list( Embeddings(seu,"pca"), Embeddings(seu,"pca") ),
  maxdists = c( 30, 30 ) )
```
